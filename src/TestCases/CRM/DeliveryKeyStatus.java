package TestCases.CRM;

import java.util.Properties;

import org.openqa.selenium.WebDriver;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import Operation.CalendarFeatures;
import Operation.ExecutionStatusChecker;
import Operation.Launchbrowser;
import Operation.ReadExcel;
import Operation.ReadObjectRepository;
import Operation.ReadTextFile;
import Operation.SeleniumOperation;

import java.util.NoSuchElementException;

public class DeliveryKeyStatus
{
	static WebDriver webdriver;
	static Properties allObjects;
	static SeleniumOperation operation;
	String className = getClass().getName();
		
	@BeforeClass
	public void ExecutionStatusCheck() throws Exception
	{
		boolean status = ExecutionStatusChecker.getExecutionStatus(className);
		ExecutionStatusChecker.executetestcase(className, status);
		webdriver=Launchbrowser.launchBrowser();
		ReadObjectRepository object = new ReadObjectRepository();
		allObjects = object.getObject();
		operation = new SeleniumOperation(webdriver);
	}
	
	@Test
	public void testDeliveryKeyStatus() throws Exception 
	{
		
		ReadExcel re = new ReadExcel();
		String xllocation = System.getProperty("user.dir")+"\\TestData\\TestData.xls";
		re.setInputFile(xllocation, 0);
		String[][] data = re.readFile();
		
		try 
		{
			//Getting the customer email from text file
			String location = System.getProperty("user.dir")+"\\TestData\\AutogeneratedTestData\\Subscription.txt";
			String loginemail = ReadTextFile.Readdata(location);
			
			int curdate = CalendarFeatures.getcurrentdate();
			
			//----operation.perform(allObjects, Keyword, ObjectName, Object Type, Value)----
			operation.execute(allObjects, "ACCESSURL", "", "", data[0][2]);
			operation.execute(allObjects, "SENDKEYS", "USERNAME", "name", data[1][2]);
			operation.execute(allObjects, "SENDKEYS", "PASSWD", "name", data[2][2]);
			operation.execute(allObjects, "CLICK", "LOGIN", "id", "");
			operation.execute(allObjects, "CLICK", "CUSTOMERLINK", "link", "");
			operation.execute(allObjects, "SENDKEYS", "COL1ROW4", "css", "Email");
			operation.execute(allObjects, "SENDKEYS", "COL2ROW4", "css", "equals");
			operation.execute(allObjects, "SENDKEYS", "COL3ROW4", "css", loginemail);
			operation.execute(allObjects, "CLICK", "SEARCHNOW", "css", "");
			
			//Checking if the default status of Delivery Key is 'NA'
			String actualstatus1 = operation.execute(allObjects, "GETTEXT", "DeliveryKeyStatus", "xpath", "");
			String expectedstatus1 = "NA";
			Assert.assertEquals(actualstatus1,expectedstatus1);
			System.out.println("Assertion Passed, Delivery Key Required is set as No.");
			String query1 ="SELECT is_key_required FROM `customer_address` WHERE customer_id = (SELECT id FROM customer WHERE email = '"+loginemail+"') AND address_type = 'Delivery'";
			String status1= SeleniumOperation.querydb(query1, "brandywine_erp");
			Assert.assertEquals(status1,"0");
						
			//Checking the status of Delivery Key when set to 'Pending'
			operation.execute(allObjects, "CLICK", "DeliveryKeyLink", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKReqYes", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKSave", "xpath", "");
			operation.execute(allObjects, "CLICK", "BacktoCRM", "xpath", "");
			Thread.sleep(5000);
			String actualstatus2 = operation.execute(allObjects, "GETTEXT", "DeliveryKeyStatus", "xpath", "");
			String expectedstatus2 = "Pending";
			Assert.assertEquals(actualstatus2,expectedstatus2);
			System.out.println("Assertion Passed, Delivery Key Required is set to Yes.");
			String query2 ="SELECT is_key_required FROM `customer_address` WHERE customer_id = (SELECT id FROM customer WHERE email = '"+loginemail+"') AND address_type = 'Delivery'";
			String status2= SeleniumOperation.querydb(query2, "brandywine_erp");
			Assert.assertEquals(status2,"1");
			
			//Checking the status of Delivery Key when set to 'Received'
			operation.execute(allObjects, "CLICK", "DeliveryKeyLink", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKReceiYes", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKReceiCalendar", "xpath", "");
			String ReceivedDate = "//td[not(contains(@class,'ui-datepicker-days-cell-over ui-datepicker-today'))]/a[text()='"+curdate+"']";
			operation.executedynamicobject("CLICK", ReceivedDate, "xpath", "");
			operation.execute(allObjects, "CLICK", "DKSave", "xpath", "");
			operation.execute(allObjects, "CLICK", "BacktoCRM", "xpath", "");
			Thread.sleep(5000);
			String actualstatus3 = operation.execute(allObjects, "GETTEXT", "DeliveryKeyStatus", "xpath", "");
			String expectedstatus3 = "Received";
			Assert.assertEquals(actualstatus3,expectedstatus3);
			System.out.println("Assertion Passed, Delivery Key Received is set to Yes.");
			String query3 ="SELECT is_key_received FROM `customer_address` WHERE customer_id = (SELECT id FROM customer WHERE email = '"+loginemail+"') AND address_type = 'Delivery'";
			String status3= SeleniumOperation.querydb(query3, "brandywine_erp");
			Assert.assertEquals(status3,"1");
			
			//Checking the status of Delivery Key when set to 'Pending'
			operation.execute(allObjects, "CLICK", "DeliveryKeyLink", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKReturnYes", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKReturnCalendar", "xpath", "");
			String ReturnedDate = "//td[not(contains(@class,'ui-datepicker-days-cell-over ui-datepicker-today'))]/a[text()='"+curdate+"']";
			operation.executedynamicobject("CLICK", ReturnedDate, "xpath", "");
			operation.execute(allObjects, "CLICK", "DKSave", "xpath", "");
			operation.execute(allObjects, "CLICK", "BacktoCRM", "xpath", "");
			Thread.sleep(5000);
			String actualstatus4 = operation.execute(allObjects, "GETTEXT", "DeliveryKeyStatus", "xpath", "");
			String expectedstatus4 = "Pending";
			Assert.assertEquals(actualstatus4,expectedstatus4);
			System.out.println("Assertion Passed, Delivery Key Received is set to Yes and Returned is set to Yes.");
			String query4 ="SELECT is_key_returned FROM `customer_address` WHERE customer_id = (SELECT id FROM customer WHERE email = '"+loginemail+"') AND address_type = 'Delivery'";
			String status4= SeleniumOperation.querydb(query4, "brandywine_erp");
			Assert.assertEquals(status4,"1");
			
			//Checking the status of Delivery Key when set to 'NA'
			operation.execute(allObjects, "CLICK", "DeliveryKeyLink", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKReqNo", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKReceiNo", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKReturnNo", "xpath", "");
			operation.execute(allObjects, "CLICK", "DKSave", "xpath", "");
			operation.execute(allObjects, "CLICK", "BacktoCRM", "xpath", "");
			Thread.sleep(5000);
			String actualstatus5 = operation.execute(allObjects, "GETTEXT", "DeliveryKeyStatus", "xpath", "");
			String expectedstatus5 = "NA";
			Assert.assertEquals(actualstatus5,expectedstatus5);
			System.out.println("Assertion Passed, Delivery Key Required/Received/Returned is set to No.");
			String query5 ="SELECT is_key_required FROM `customer_address` WHERE customer_id = (SELECT id FROM customer WHERE email = '"+loginemail+"') AND address_type = 'Delivery'";
			String status5= SeleniumOperation.querydb(query5, "brandywine_erp");
			Assert.assertEquals(status5,"0");
			
			webdriver.quit();
		}
		catch (NoSuchElementException e) 
		{	
			e.printStackTrace();
			webdriver.quit();
		}	
		
	}
}

package TestCases.CRM;

import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import org.openqa.selenium.WebDriver;
import org.testng.Assert;

import Operation.CalendarFeatures;
import Operation.ExecutionStatusChecker;
import Operation.Launchbrowser;
import Operation.ReadExcel;
import Operation.ReadObjectRepository;
import Operation.ReadTextFile;
import Operation.SeleniumOperation;

import java.util.NoSuchElementException;
import java.util.Properties;

public class NSFACH 
{
	static WebDriver webdriver;
	static Properties allObjects;
	static SeleniumOperation operation;
	String className = getClass().getName();
		
	@BeforeClass
	public void ExecutionStatusCheck() throws Exception
	{
		//OTPACHSuccess otpach = new OTPACHSuccess(); //Pre-requisite: Need to run OTPACHSuccess script.
		//otpach.ExecutionStatusCheck();
		//otpach.testOTPACHSuccess();
		
		boolean status = ExecutionStatusChecker.getExecutionStatus(className);
		ExecutionStatusChecker.executetestcase(className, status);
		webdriver=Launchbrowser.launchBrowser();
		ReadObjectRepository object = new ReadObjectRepository();
		allObjects = object.getObject();
		operation = new SeleniumOperation(webdriver);
	}
	
	@Test
	public void testNSFACH() throws Exception 
	{
		
		ReadExcel re = new ReadExcel();
		String xllocation = System.getProperty("user.dir")+"\\TestData\\TestData.xls";
		re.setInputFile(xllocation, 0);
		String[][] data = re.readFile();
		
		try 
		{
			//Setting values
			int CurDate = CalendarFeatures.getcurrentdate();
			
			//Reading the customer email to perform refund
			String location1 = System.getProperty("user.dir")+"\\TestData\\AutogeneratedTestData\\ACHCustomerToRefund.txt";
			String Customer = ReadTextFile.Readdata(location1);
			
			String query1 = "SELECT COUNT(*) FROM `non_sufficient_funds` WHERE date_created > CURDATE() AND customer_id = (SELECT id FROM customer WHERE email = '"+Customer+"')";
			String ACHReturnedCount= SeleniumOperation.querydb(query1, "brandywine_erp");
			int count = Integer.parseInt(ACHReturnedCount);
			int increment = count + 1;
			
			String location2 = System.getProperty("user.dir")+"\\TestData\\AutogeneratedTestData\\ACHPGLID.txt";
			String PGLID = ReadTextFile.Readdata(location2);
			
			//----operation.perform(allObjects, Keyword, ObjectName, Object Type, Value)----
			operation.execute(allObjects, "ACCESSURL", "", "", data[0][2]);
			operation.execute(allObjects, "SENDKEYS", "USERNAME", "name", data[1][2]);
			operation.execute(allObjects, "SENDKEYS", "PASSWD", "name", data[2][2]);
			operation.execute(allObjects, "CLICK", "LOGIN", "id", "");
			operation.execute(allObjects, "CLICK", "CUSTOMERLINK", "link", "");
			operation.execute(allObjects, "SENDKEYS", "COL1ROW4", "css", "Email");
			operation.execute(allObjects, "SENDKEYS", "COL2ROW4", "css", "equals");
			operation.execute(allObjects, "SENDKEYS", "COL3ROW4", "css", Customer);
			operation.execute(allObjects, "CLICK", "SEARCHNOW", "css", "");
			operation.execute(allObjects, "CLICK", "GoToCustomer", "xpath", "");
			Thread.sleep(10000);
			operation.execute(allObjects, "CLICK", "NSF", "xpath", "");
			operation.execute(allObjects, "CLICK", "ACHNSFType", "xpath", "");
			Thread.sleep(2000);
			operation.execute(allObjects, "CLICK", "NSFCalendarComponent", "xpath", "");
			
			String calendarXpath = "//td[not(contains(@class,'ui-datepicker-days-cell-over ui-datepicker-today'))]/a[text()='"+CurDate+"']";
			operation.executedynamicobject("CLICK", calendarXpath, "xpath", "");
			
			operation.execute(allObjects, "CLICK", "NSFGO", "xpath", "");
						
			String ChargeNSFFee = ".//*[@id='charge_ach_return_fee_yes_"+increment+"']";
			String ReturnPayment = ".//*[@id='return_buttons_row_"+increment+"']/input";
			operation.executedynamicobject("CLICK", ChargeNSFFee, "xpath", "");
			operation.executedynamicobject("CLICK", ReturnPayment, "xpath", "");
			
			operation.execute(allObjects, "CLICK", "NSFConf", "xpath", "");
			Thread.sleep(2000);
			operation.execute(allObjects, "CLICK", "NSFConf", "xpath", "");
			Thread.sleep(5000);
			
			String query2 = "SELECT nsf.nsf_fee FROM non_sufficient_funds nsf, ach_transaction acht WHERE acht.id = nsf.ach_transaction_id AND acht.payment_gateway_log_id = '"+PGLID+"'";
			String ReturnedAmount= SeleniumOperation.querydb(query2, "brandywine_erp");
			Assert.assertEquals(ReturnedAmount,"15.00");
						
			operation.execute(allObjects, "CLICK", "BacktoCRM", "xpath", "");
			webdriver.quit();
	}
		catch (NoSuchElementException e) 
		{	
			e.printStackTrace();
			webdriver.quit();
		}	
		
	}

}

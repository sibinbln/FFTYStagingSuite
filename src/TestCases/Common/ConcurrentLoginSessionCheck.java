package TestCases.Common;

import java.util.Properties;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import Operation.ExecutionStatusChecker;
import Operation.Launchbrowser;
import Operation.ReadExcel;
import Operation.ReadObjectRepository;
import Operation.ReadTextFile;
import Operation.SeleniumOperation;

public class ConcurrentLoginSessionCheck 
{

	static WebDriver webdriver;
	static WebDriver webdriver2;
	static Properties allObjects;
	static SeleniumOperation operation;
	String className = getClass().getName();
	
			
	@BeforeClass
	public void ExecutionStatusCheck() throws Exception
	{
		boolean status = ExecutionStatusChecker.getExecutionStatus(className);
		ExecutionStatusChecker.executetestcase(className, status);
	}
	
	@Test
	public void testConcurrentLoginSessionCheck() throws Exception 
	{
		ReadExcel re = new ReadExcel();
		String xllocation = System.getProperty("user.dir")+"\\TestData\\TestData.xls";
		re.setInputFile(xllocation, 0);
		String[][] data = re.readFile();

		try
		{	
			//Logging in as online user in new window
			webdriver=Launchbrowser.launchBrowser();
			ReadObjectRepository object = new ReadObjectRepository();
			allObjects = object.getObject();
			operation = new SeleniumOperation(webdriver);
			String location = System.getProperty("user.dir")+"\\TestData\\AutogeneratedTestData\\Subscription.txt";
			String loginemail = ReadTextFile.Readdata(location);
			
			//----operation.perform(allObjects, Keyword, ObjectName, Object Type, Value)----
			operation.execute(allObjects, "ACCESSURL", "", "", data[0][1]);
			operation.execute(allObjects, "SENDKEYS", "ENTEREMAIL", "id", loginemail);
			operation.execute(allObjects, "SENDKEYS", "ENTERPASSWORD", "id", data[2][4]);
			operation.execute(allObjects, "CLICK", "LOGINBUTTON", "id", "");
			operation.execute(allObjects, "CLICK", "MyAccountlink", "css", "");
			Thread.sleep(5000);
			
			/*Set<Cookie> cookiesList1 = webdriver.manage().getCookies();
			for (Cookie getcookies : cookiesList1) 
			{
			System.out.println(getcookies);
			}*/
					
			String winHandleprimary = webdriver.getWindowHandle();
			Thread.sleep(3000);
			
								
				    //Logging in as CSR in new window
					webdriver2=Launchbrowser.launchBrowser();
					ReadObjectRepository object1 = new ReadObjectRepository();
					allObjects = object1.getObject();
					operation = new SeleniumOperation(webdriver2);
					operation.execute(allObjects, "ACCESSURL", "", "", data[0][2]);
					operation.execute(allObjects, "SENDKEYS", "USERNAME", "name", data[1][2]);
					operation.execute(allObjects, "SENDKEYS", "PASSWD", "name", data[2][2]);
					operation.execute(allObjects, "CLICK", "LOGIN", "id", "");
					operation.execute(allObjects, "CLICK", "CUSTOMERLINK", "link", "");
					//Connecting to data base to fetch customer email
					String query ="SELECT email FROM customer WHERE is_active='1' limit 1";
					String cust= SeleniumOperation.querydb(query, "brandywine_erp");
					Thread.sleep(5000);
					
					operation.execute(allObjects, "SENDKEYS", "COL1ROW4", "css", "Email");
					operation.execute(allObjects, "SENDKEYS", "COL2ROW4", "css", "equals");
					operation.execute(allObjects, "SENDKEYS", "COL3ROW4", "css", cust);
					operation.execute(allObjects, "CLICK", "SEARCHNOW", "css", "");
					operation.execute(allObjects, "CLICK", "GoToCustomer", "xpath", "");
					Thread.sleep(5000);
					
					String utm2 = SeleniumOperation.cookie("GETCOOKIE", "utmcsr", "");
					String ccn2 = SeleniumOperation.cookie("GETCOOKIE", "utmccn", ""); 
					String cmd2 = SeleniumOperation.cookie("GETCOOKIE", "utmcmd", ""); 
					String Customer2 = SeleniumOperation.cookie("GETCOOKIE", "CUSTOMER", ""); 
					String ar2 = SeleniumOperation.cookie("GETCOOKIE", "__ar_v4", "");
					String ga2 = SeleniumOperation.cookie("GETCOOKIE", "_ga", "");
					String fe2 = SeleniumOperation.cookie("GETCOOKIE", "frontend", "");
					String cct2 = SeleniumOperation.cookie("GETCOOKIE", "utmcct", "");
					Thread.sleep(2000);
					webdriver2.close();
					
			//Navigating back to customer online portal window, passing csr cookie values and page refresh
			webdriver.switchTo().window(winHandleprimary);
			operation = new SeleniumOperation(webdriver);
			Thread.sleep(2000);
			
			SeleniumOperation.cookie("DELETECOOKIE", "utmcsr", "");
			SeleniumOperation.cookie("DELETECOOKIE", "utmccn", "");
			SeleniumOperation.cookie("DELETECOOKIE", "utmcmd", "");
			SeleniumOperation.cookie("DELETECOOKIE", "CUSTOMER", "");
			SeleniumOperation.cookie("DELETECOOKIE", "__ar_v4", "");
			SeleniumOperation.cookie("DELETECOOKIE", "_ga", "");
			SeleniumOperation.cookie("DELETECOOKIE", "frontend", "");
			SeleniumOperation.cookie("ADDCOOKIE", "utmcsr", utm2);
			SeleniumOperation.cookie("ADDCOOKIE", "utmccn", ccn2);
			SeleniumOperation.cookie("ADDCOOKIE", "utmcmd", cmd2);
			SeleniumOperation.cookie("ADDCOOKIE", "CUSTOMER", Customer2);
			SeleniumOperation.cookie("ADDCOOKIE", "__ar_v4", ar2);
			SeleniumOperation.cookie("ADDCOOKIE", "_ga", ga2);
			SeleniumOperation.cookie("ADDCOOKIE", "frontend", fe2);
			SeleniumOperation.cookie("ADDCOOKIE", "utmcct", cct2);
		
			webdriver.navigate().refresh();
			Thread.sleep(5000);
			webdriver.quit();
	}
		
		catch (NoSuchElementException e) 
		{	
			e.printStackTrace();
			webdriver.quit();
		}
		
	}

	
}
